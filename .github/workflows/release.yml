name: Release Firmware

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: generate-matrix
        run: |
          matrix=$(python3 build_lily.py --generate-matrix)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  build-firmware:
    runs-on: ubuntu-latest
    needs: generate-matrix
    container: ghcr.io/qmk/qmk_cli
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Checkout QMK firmware (this repo)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        run: |
          python3 build_lily.py --build-single --keymap ${{ matrix.keymap }} --left-device ${{ matrix.left_device }} --right-device ${{ matrix.right_device }} --side ${{ matrix.side }}

      - name: Archive Firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.keymap }}-${{ matrix.left_device || 'none' }}-${{ matrix.right_device || 'none' }}-${{ matrix.side }}
          path: build_lily/*.uf2

  create-release:
    needs: build-firmware
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all firmware artifacts
        uses: actions/download-artifact@v4
        with:
          path: all_firmware_artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          find all_firmware_artifacts -type f -name "*.uf2" -exec mv {} release_assets/ \;

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          gh release create "$TAG_NAME" \
            --title "Release $TAG_NAME" \
            --notes "Automated firmware release for ${TAG_NAME}." \
            --draft \
            release_assets/*
